### This is the code repository for CellCartographer v1.0 ###

#Listed here are dependencies needed to execute CellCartographer

#CellCartographer is implemented as a combination of largely Python3 and shell scripting. (see more at https://github.com/eappleton/cellcartographer). 

#Here is a list of required dependencies to run CellCartographer:
sratoolkit 3.0.2
gcc 6.2.0
homer 4.9
bowtie2 2.2.9
star 2.7.9a
python  3.6.8
idr 2.0.2
R 4.2.1

#Here is a required list of Python packages:
argparse
multiprocess
numpy 1.19.5
pandas 0.25.3
scipy 1.5.4
sklearn 0.0
biopython 1.79
bio 1.0.2
certifi 2020.12.5
chardet 4.0.0
cycler 0.10.0
distance 0.1.3
idna 2.10
joblib 1.0.0
kiwisolver 1.3.1
matplotlib 2.2.2
matplotlib_venn 0.11.6
Pillow 8.0.1
pyparsing 2.4.7
python_dateutil 2.8.1
pytz 2020.4
requests 2.25.1
scikit_learn 0.23.2
seaborn 0.11.0
setuptools 28.8.0
six 1.15.0
threadpoolctl 2.1.0
urllib3 1.26.2

#Here is a required list of R packages:
ggplot2 3.4.2
ggpubr 0.6.0
svglite 2.1.1

### After basic installation, the following steps will remain to set up alignment indexes and python virtual environments - this MUST be done for CellCartographer to finish the post-install script ###
-Download genome(s) of interest (this code is currently written assuming mm10 and hg38 genome builds, but others could be added) and move them to 'cellcartographer/src/rnaSeqAnalysis/rnaSeqCrossValidation/resources/data/fastq/index' AND 'cellcartographer/src/rnaSeqAnalysis/tfAnalysis/resources/data/fastq/index/'
-If alternate genomes and/or species are added, source code will need to be tweaked to point to proper indexes from input
-Run 'cellcartographer/src/rnaSeqAnalysis/rnaSeqCrossValidation/resources/data/fastq/index/makeSTARindex.sh' after moving genomes to this folder
-Run 'cellcartographer/src/rnaSeqAnalysis/tfAnalysis/resources/data/fastq/index/makeIndex.sh' after moving genomes to this folder
-Run 'cellcartographer/src/rnaSeqAnalysis/tfAnalysis/tbaSetUp.sh'

#At this point, all software is installed to run CellCartographer, so you may download some example data to test it out
-Download RNAseq data to the folder 'uploaded_data/transcriptomics/(MY_CELL_TYPE)' using the script 'uploaded_data/download_data.sh' which has examples for how to download data from GEO and ENCODE using curl and example intermediate files listing the IDs of interest
-Download RNAseq data to the folder 'uploaded_data/epigenetics/(MY_CELL_TYPE)' using the script 'uploaded_data/download_data.sh' which has examples for how to down
load data from GEO and ENCODE using curl and example intermediate files listing the IDs of interest 

#Post-installation, here are the basic usage cases and workflow
#There are three processes run as input and procude difference sets of files as output

# 1. RNAseq ONLY workflow
# Fastq files -> STAR -> HOMER -> FPKM files

This workflow takes in raw FASTQ data files and outputs an RPKM file. 

In this use case, raw data is placed into the folder 'uploaded_data/transcriptomics' in a folder named for the cell type(s). Multiple folders may be present. If files are paired-end, the software will figure this out, otherwise single-end reads for each sample are acceptable.

To initiate the workflow, the file 'runTestsRNAseq_Upload.sh' will be run. This file will need to be edited to find the correct data input folder:

The following variables need to be adjusted to run

keyTermsRNA=';;;[SPECIES]' --> SPECIES='homo sapiens' or SPECIES='mus musculus'
export STAMP='MY_CELL_TYPE' 
export nProc=8 --> no need to change this, but may be modified to change the number of processors used to parallelize the runs

FPKM output files will ultimately appear in the diretory 'test/rnaSeqAnalysis/rnaSeqCrossValidationRPKM/results/RPKM/STAMP'

An exmample output for microglia in a folder named MG exists there starting from SRA data:
SRR3319495.fastq
SRR3319496.fastq

# 2. Epigenetics (ATAC/DNAse/ChIPseq) ONLY workflow
# Fastq files -> Bowtie2 -> HOMER -> IDR -> TBA -> CellCartographer Tf output files

This workflow takes in raw FASTQ data files and outputs a folder with a set of CellCartographer output files

In this use case, raw data is placed into the folder 'uploaded_data/epigenetics' in a folder named for the cell type(s). Multiple folders may be present. If files are paired-end, the software will figure this out, otherwise single-end reads for each sample are acceptable.

To initiate the workflow, the file 'runTestsTBA_Upload.sh' will be run. This file will need to be edited to find the correct data input folder: 

The following variables need to be adjusted to run 

keyTermsTBA=';;;[SPECIES]' --> SPECIES='homo sapiens' or SPECIES='mus musculus'
export STAMP='MY_CELL_TYPE'
export nProc=8 --> no need to change this, but may be modified to change the number of processors used to parallelize the runs

TBA output files will ultimately appear in the diretory 'test/rnaSeqAnalysis/rnaSeqCrossValidationRPKM/resources/data/CrossValidate/STAMP'

An exmample output for microglia in a folder named MG exists there starting from SRA data:
SRR6351241.fastq
SRR6351242.fastq
SRR6351243.fastq

In this example, large files are excluded, but the gene rank, coefficient and performance files remain there

# 3. Transcriptomics and Epigenetics (ATAC/DNAse/ChIPseq) workflow (MAIN CELLCARTOGRAPHER WORKFLOW)
# Fastq files -> Bowtie2 -> HOMER -> IDR -> TBA -> CellCartographer Tf output files
# Fastq files -> STAR -> HOMER -> FPKM files

This workflow takes in raw FASTQ data files and outputs a folder with a set of CellCartographer output files

In this use case, raw epigenetids data is placed into the folder 'uploaded_data/epigenetics' in a folder named for the cell type(s) and matching directories with data in 'uploaded_data/transcriptomics'. Multiple folders may be present. If files are paired-end, the software will figure this out, otherwise single-end reads for each sample are acceptable.

To initiate the workflow, the file 'runTestsTBARNAseq_Upload.sh' will be run. This file will need to be edited to find the correct data input folder:   

The following variables need to be adjusted to run   

keyTermsRNA=';;;[SPECIES]' --> SPECIES='homo sapiens' or SPECIES='mus musculus'
keyTermsTBA=';;;[SPECIES]' --> SPECIES='homo sapiens' or SPECIES='mus musculus'
export STAMP='MY_CELL_TYPE'
export nProc=8 --> no need to change this, but may be modified to change the number of processors used to parallelize the runs

TBA output files will ultimately appear in the diretory 'test/rnaSeqAnalysis/rnaSeqCrossValidationRPKM/resources/data/CrossValidate/STAMP'

An exmample output for microglia in a folder named MG exists there starting from SRA data:
(Epigenetics)
SRR6351241.fastq
SRR6351242.fastq
SRR6351243.fastq
(Transcriptomics)
SRR3319495.fastq
SRR3319496.fastq

In this example, large files are excluded, but the gene rank, coefficient and performance files remain there
